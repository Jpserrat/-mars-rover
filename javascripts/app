// Rover Object Goes Here
// ======================
var rover = {
  direction: ['North', 'Weast', 'South', 'East'],
  position: [0, 0],
  obstacle: [[0, 4], [4, 6]],
  currentDirection: 0,
  stop: false
};
// ======================
var command = [];
var travelLog = [];

function obstacle(nextPosition, arrayPosition) {
  if (arrayPosition > 9 || arrayPosition < 0 || nextPosition.toString() == rover.obstacle[0].toString() || nextPosition.toString() == rover.obstacle[1].toString()) {
    rover.stop = true;
    return false;
  } else {
    return true;
  }
}

function movements(commands) {

  command = commands.split("");

  for (var i = 0; i < command.length; i++ ) {
    if (rover.stop == false) {
      switch (command[i]) {
        case 'l':
        turnLeft();
        break;

        case 'r':
        turnRight();
        break;

        case 'f':
        move('f');
        break;

        case 'b':
        move('b');
        break;
      }
    } 
  }
}

function turnLeft(){
  if (rover.currentDirection + 1 <= 3 ) {
    rover.currentDirection++;
  } else {
    rover.currentDirection = 0;
  }
}

function turnRight() {
  if (rover.currentDirection - 1 < 0 ) {
    rover.currentDirection = 3;
  } else {
    rover.currentDirection--;
  }
}

function move(direction) {
  switch (rover.currentDirection) {
    case 0: //north 
    if (direction == 'f') {
      rover.position[1]++;
      if (obstacle(rover.position, rover.position[1])){
        travelLog.push([rover.position]);
      } else {
        rover.position[1]--;
      }
    } else {
      rover.position[1]--;
      if (obstacle(rover.position, rover.position[1])){
        travelLog.push([rover.position]);
      } else {
        rover.position[1]++;
      }
    }
    break;

    case 1: //weast 
    if (direction == 'f') {
      rover.position[0]--; 
      if (obstacle(rover.position[0], rover.position[0])){
        travelLog.push([rover.position]);
      } else {
        rover.position[0]++;
      }
    } else {
      rover.position[0]++;
      if (obstacle(rover.position[0], rover.position[0])){
        travelLog.push([rover.position]);
      } else {
        rover.position[0]--;
      }
    }
    break;

    case 2: //south
    if (direction == 'f') {
      rover.position[1]--;
      if (obstacle(rover.position[1], rover.position[1])){
        travelLog.push([rover.position]);
      } else {
        rover.position[1]++;
      }
    } else {
      rover.position[1]++;
      if (obstacle(rover.position[1], rover.position[1])){
        travelLog.push([rover.position]);
      } else {
        rover.position[1]--;
      }
    }
    break;

    case 3: //East
    if (direction == 'f') {
      rover.position[0]++;
      if (obstacle(rover.position[0], rover.position[0])){
        travelLog.push([rover.position]);
      } else {
        rover.position[0]--;
      }
    } else {
      rover.position[0]--;
      if (obstacle(rover.position[0], rover.position[0])){
        travelLog.push([rover.position]);
      } else {
        rover.position[0]++;
      }
    }
    break;
  }
}
